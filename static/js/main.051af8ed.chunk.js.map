{"version":3,"sources":["utils/product.util.js","components/Search/Index.jsx","store/actions/search/search.action.js","store/actions/search/search.actiontype.js","components/Shared/Header.jsx","components/Shared/Footer.jsx","components/Products/PriceRangeFilter.jsx","components/Products/SortByPrice.jsx","components/Products/ProductList.jsx","store/actions/cart/cart.action.js","store/actions/cart/cart.actiontype.js","components/Products/MobileSortByPrice.jsx","components/Products/MobilePriceRangeFilter.jsx","pages/ProductListing.jsx","components/Checkout/CartSummary.jsx","components/Checkout/CartItems.jsx","pages/Checkout.jsx","store/reducers/index.js","store/reducers/cart.reducer.js","store/reducers/search.reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["calculateDiscountPrice","price","discount","mapDispatchToProps","setSearchTerm","searchTerm","type","payload","connect","props","func","delay","debounceTimer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","className","placeholder","onChange","e","target","value","state","cart","items","cartCount","forEach","item","quantity","to","Footer","PriceFilter","useState","min","max","priceRange","setPriceRange","maxValue","minValue","step","onClick","filterByPrice","SortByFilter","sortProduct","sortProductByPrice","sortType","addToCart","product","findIndex","id","Fragment","products","map","key","src","img_url","alt","name","MobileSortBy","setSortType","onSortTypeChange","visible","visibleSortOption","width","effect","onClickAway","closeSortDialog","MobileFilterByPrice","visibleFilterOption","closeFilterDialog","children","search","term","setProducts","filteredProducts","setFilteredProducts","setVisibleSortOption","setVisibleFilterOption","useEffect","fetch","then","res","json","data","productList","filter","sortByPrice","filteredProds","sort","a","b","PriceRangeFilter","SortByPrice","prod","toLowerCase","includes","MobileSortByPrice","MobilePriceRangeFilter","CartSummary","CartItems","decreaseItemQuantity","size","increaseItemQuantity","removeItemFromCart","productId","length","combineReducers","action","updatedItems","store","createStore","reducers","App","path","exact","component","ProductListing","Checkout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.051af8ed.chunk.js","sourcesContent":["export const calculateDiscountPrice = (price, discount) =>\r\n  price - (price * discount) / 100;\r\n\r\nexport const debounce = (func, delay) => {\r\n  let debounceTimer;\r\n  return function() {\r\n    const context = this;\r\n    const args = arguments;\r\n    clearTimeout(debounceTimer);\r\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSearchTerm } from \"../../store/actions/search/search.action\";\r\nimport { debounce } from \"../../utils/product.util\";\r\n\r\nconst Search = props => {\r\n  const handleInputChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const setSearchTerm = debounce(props.setSearchTerm, 200);\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input type=\"text\" placeholder=\"Search\" onChange={handleInputChange} />\r\n      <span className=\"glyphicon glyphicon-search\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setSearchTerm\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n","import { SET_SEARCH_TERM } from \"./search.actiontype\";\r\n\r\nexport const setSearchTerm = searchTerm => {\r\n  return { type: SET_SEARCH_TERM, payload: searchTerm };\r\n};\r\n","export const SET_SEARCH_TERM = \"SET_SEARCH_TERM\";\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Search from \"../Search/Index\";\r\n\r\nimport \"../../style/header.scss\";\r\n\r\nconst Header = props => {\r\n  let cartCount = 0;\r\n  props.cart.forEach(item => {\r\n    cartCount += item.quantity;\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header-bar\">\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\">\r\n            <span className=\"glyphicon glyphicon-star\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <Search />\r\n          <Link to=\"/checkout\">\r\n            <span className=\"glyphicon glyphicon-shopping-cart\" />\r\n          </Link>\r\n          {cartCount ? <div className=\"cart-count\">{cartCount}</div> : null}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart.items\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import React from \"react\";\r\n\r\nimport \"../../style/footer.scss\";\r\n\r\nexport default function Footer() {\r\n  return <div className=\"footer\">&copy;Copyright</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport InputRange from \"react-input-range\";\r\n\r\nimport \"react-input-range/lib/css/index.css\";\r\n\r\nconst PriceFilter = props => {\r\n  const minPrice = 100;\r\n  const maxPrice = 1000;\r\n  const step = 50;\r\n  const [priceRange, setPriceRange] = useState({ min: 100, max: 400 });\r\n\r\n  const applyPriceFilter = () => {\r\n    props.filterByPrice(priceRange);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"range-container\">\r\n        <div className=\"filter-scale\">Filters</div>\r\n        <InputRange\r\n          maxValue={maxPrice}\r\n          minValue={minPrice}\r\n          step={step}\r\n          value={priceRange}\r\n          onChange={value => setPriceRange(value)}\r\n        />\r\n        <div className=\"price-range\">Price</div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        onClick={applyPriceFilter}\r\n      >\r\n        Apply\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceFilter;\r\n","import React from \"react\";\r\n\r\nconst SortByFilter = props => {\r\n  const sortProduct = type => {\r\n    props.sortProductByPrice(type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sort-options\">\r\n      <ul>\r\n        <li className=\"filtersort\">Sort By</li>\r\n        <li\r\n          onClick={() => sortProduct(\"HIGH_TO_LOW\")}\r\n          className={props.sortType === \"HIGH_TO_LOW\" ? \"active\" : \"\"}\r\n        >\r\n          Price--High Low\r\n        </li>\r\n        <li\r\n          onClick={() => sortProduct(\"LOW_TO_HIGH\")}\r\n          className={props.sortType === \"LOW_TO_HIGH\" ? \"active\" : \"\"}\r\n        >\r\n          Price--Low High\r\n        </li>\r\n        <li\r\n          onClick={() => sortProduct(\"DISCOUNT\")}\r\n          className={props.sortType === \"DISCOUNT\" ? \"active\" : \"\"}\r\n        >\r\n          Discount\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default SortByFilter;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addToCart } from \"../../store/actions/cart/cart.action\";\r\nimport { calculateDiscountPrice } from \"../../utils/product.util\";\r\n\r\nconst ProductList = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.products.map(product => (\r\n        <div key={product.id} className=\"col-md-3 col-sm-4  col-xs-6\">\r\n          <div className=\"itmdetails\">\r\n            <img\r\n              className=\"img-responsive\"\r\n              src={product.img_url}\r\n              alt=\"product\"\r\n            />\r\n            <div className=\"itemname\">{product.name}</div>\r\n            <div className=\"price-list\">\r\n              <div className=\"itemprice\">\r\n                <div>\r\n                  ₹{calculateDiscountPrice(product.price, product.discount)}\r\n                </div>\r\n                <s>{product.price}</s>\r\n              </div>\r\n              <div className=\"discnt\">{product.discount}% off</div>\r\n            </div>\r\n            <div className=\"add-cart\">\r\n              <button\r\n                className=\"btn btn-warning\"\r\n                onClick={() => props.addToCart(product, props.cart)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addToCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n","import {\r\n  ADDED_TO_CART,\r\n  INCREASE_QUANTITY,\r\n  DECREASE_QUANTITY,\r\n  REMOVE_CART_ITEM\r\n} from \"./cart.actiontype\";\r\n\r\nexport const addToCart = (product, cart) => {\r\n  const itemIndex = cart.findIndex(item => item.id === product.id);\r\n  if (itemIndex >= 0) {\r\n    return { type: INCREASE_QUANTITY, payload: product.id };\r\n  }\r\n  return { type: ADDED_TO_CART, payload: { ...product, quantity: 1 } };\r\n};\r\n\r\nexport const increaseItemQuantity = productId => {\r\n  return { type: INCREASE_QUANTITY, payload: productId };\r\n};\r\n\r\nexport const decreaseItemQuantity = productId => {\r\n  return { type: DECREASE_QUANTITY, payload: productId };\r\n};\r\n\r\nexport const removeItemFromCart = productId => {\r\n  return { type: REMOVE_CART_ITEM, payload: productId };\r\n};\r\n","export const ADDED_TO_CART = \"ADDED_TO_CART\";\r\nexport const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-awesome-modal\";\r\n\r\nconst MobileSortBy = props => {\r\n  const [sortType, setSortType] = useState(\"\");\r\n\r\n  const onSortTypeChange = e => {\r\n    setSortType(e.target.value);\r\n  };\r\n\r\n  const sortProduct = e => {\r\n    props.sortProductByPrice(sortType);\r\n    props.closeSortDialog();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        visible={props.visibleSortOption}\r\n        width=\"280\"\r\n        effect=\"fadeInUp\"\r\n        onClickAway={() => props.closeSortDialog()}\r\n      >\r\n        <div className=\"mob-price-sort\">\r\n          <div className=\"sort-option\">\r\n            <h1>Sort Options</h1>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sortType\"\r\n                  value=\"HIGH_TO_LOW\"\r\n                  onChange={onSortTypeChange}\r\n                />\r\n                Price--High Low\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sortType\"\r\n                  value=\"LOW_TO_HIGH\"\r\n                  onChange={onSortTypeChange}\r\n                />\r\n                Price--Low High\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sortType\"\r\n                  value=\"DISCOUNT\"\r\n                  onChange={onSortTypeChange}\r\n                />\r\n                Discount\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <div\r\n            onClick={() => props.closeSortDialog()}\r\n            className=\"action cancel\"\r\n          >\r\n            Cancel\r\n          </div>\r\n          <div className=\"action\" onClick={sortProduct}>\r\n            Apply\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MobileSortBy;\r\n","import React from \"react\";\r\nimport Modal from \"react-awesome-modal\";\r\n\r\nconst MobileFilterByPrice = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        visible={props.visibleFilterOption}\r\n        width=\"280\"\r\n        effect=\"fadeInUp\"\r\n        onClickAway={() => props.closeFilterDialog()}\r\n      >\r\n        <div className=\"mob-price-sort\">\r\n          {props.children}\r\n          <button\r\n            className=\"btn btn-cancel\"\r\n            onClick={() => props.closeFilterDialog()}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default MobileFilterByPrice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PriceRangeFilter from \"../components/Products/PriceRangeFilter\";\r\nimport SortByPrice from \"../components/Products/SortByPrice\";\r\nimport ProductList from \"../components/Products/ProductList\";\r\nimport MobileSortByPrice from \"../components/Products/MobileSortByPrice\";\r\nimport { calculateDiscountPrice } from \"../utils/product.util\";\r\nimport \"../style/productListing.scss\";\r\nimport MobilePriceRangeFilter from \"../components/Products/MobilePriceRangeFilter\";\r\n\r\nconst ProductListing = props => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [sortType, setSortType] = useState(\"\");\r\n\r\n  const [visibleSortOption, setVisibleSortOption] = useState(false);\r\n  const [visibleFilterOption, setVisibleFilterOption] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.myjson.com/bins/qzuzi\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setProducts(data);\r\n        setFilteredProducts(data);\r\n      });\r\n  }, []);\r\n\r\n  const filterByPrice = priceRange => {\r\n    closeFilterDialog();\r\n    let productList = products.filter(\r\n      product =>\r\n        calculateDiscountPrice(product.price, product.discount) >=\r\n          priceRange.min &&\r\n        calculateDiscountPrice(product.price, product.discount) <=\r\n          priceRange.max\r\n    );\r\n    if (sortType) {\r\n      productList = sortByPrice(sortType, productList);\r\n    }\r\n    setFilteredProducts(productList);\r\n  };\r\n\r\n  const sortProductByPrice = type => {\r\n    setSortType(type);\r\n    const productList = sortByPrice(type, filteredProducts);\r\n    setFilteredProducts(productList);\r\n  };\r\n\r\n  const sortByPrice = (type, filteredProds) => {\r\n    const productList = [...filteredProds];\r\n    switch (type) {\r\n      case \"HIGH_TO_LOW\":\r\n        productList.sort(function(a, b) {\r\n          if (\r\n            calculateDiscountPrice(a.price, a.discount) >\r\n            calculateDiscountPrice(b.price, b.discount)\r\n          ) {\r\n            return -1;\r\n          }\r\n          if (\r\n            calculateDiscountPrice(b.price, b.discount) >\r\n            calculateDiscountPrice(a.price, a.discount)\r\n          ) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      case \"LOW_TO_HIGH\":\r\n        productList.sort(function(a, b) {\r\n          if (\r\n            calculateDiscountPrice(a.price, a.discount) >\r\n            calculateDiscountPrice(b.price, b.discount)\r\n          ) {\r\n            return 1;\r\n          }\r\n          if (\r\n            calculateDiscountPrice(b.price, b.discount) >\r\n            calculateDiscountPrice(a.price, a.discount)\r\n          ) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n\r\n      case \"DISCOUNT\":\r\n        productList.sort(function(a, b) {\r\n          if (a.discount > b.discount) {\r\n            return -1;\r\n          }\r\n          if (a.discount < b.discount) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return productList;\r\n  };\r\n  const searchProduct = () => {\r\n    if (props.searchTerm) {\r\n      return filteredProducts.filter(prod =>\r\n        prod.name.toLowerCase().includes(props.searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    return filteredProducts;\r\n  };\r\n\r\n  const openSortingDialog = () => {\r\n    setVisibleSortOption(true);\r\n  };\r\n\r\n  const closeSortDialog = () => {\r\n    setVisibleSortOption(false);\r\n  };\r\n\r\n  const openFilterDialog = () => {\r\n    setVisibleFilterOption(true);\r\n  };\r\n\r\n  const closeFilterDialog = () => {\r\n    setVisibleFilterOption(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter\" onClick={openSortingDialog}>\r\n          <span className=\"glyphicon glyphicon-triangle-top\"></span>\r\n          <span className=\"glyphicon glyphicon-triangle-top triangle-down\"></span>{\" \"}\r\n          Sort\r\n        </div>\r\n        <div className=\"filter\" onClick={openFilterDialog}>\r\n          <span className=\"glyphicon glyphicon-filter\"></span> Filter\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid product-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 col-sm-3 price-range-container\">\r\n            <PriceRangeFilter filterByPrice={filterByPrice} />\r\n          </div>\r\n          <div className=\"col-md-10 col-sm-9 col-xs-12 product-det\">\r\n            <div className=\"sort-container\">\r\n              <SortByPrice\r\n                sortProductByPrice={sortProductByPrice}\r\n                sortType={sortType}\r\n              />\r\n            </div>\r\n            <div className=\"product-list\">\r\n              <div className=\"row\">\r\n                <ProductList products={searchProduct()} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <MobileSortByPrice\r\n        sortProductByPrice={sortProductByPrice}\r\n        closeSortDialog={closeSortDialog}\r\n        visibleSortOption={visibleSortOption}\r\n      />\r\n      <MobilePriceRangeFilter\r\n        closeFilterDialog={closeFilterDialog}\r\n        visibleFilterOption={visibleFilterOption}\r\n      >\r\n        <PriceRangeFilter filterByPrice={filterByPrice} />\r\n      </MobilePriceRangeFilter>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchTerm: state.search.term\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ProductListing);\r\n","import React from \"react\";\r\n\r\nconst CartSummary = props => {\r\n  let price = 0;\r\n  let discount = 0;\r\n  let quantity = 0;\r\n  props.cart.forEach(item => {\r\n    quantity += item.quantity\r\n    price += item.price * item.quantity;\r\n    discount += ((item.price * item.quantity * item.discount) / 100);\r\n  });\r\n  return (\r\n    <div className=\"col-sm-4 price-list\">\r\n      <div className=\"pl-section\">\r\n        <h2>PRICE DETAILS</h2>\r\n        <div>\r\n          Price ({quantity} item) :<span> ₹{price}</span>\r\n        </div>\r\n        <div>\r\n          Discount : <span>₹{discount}</span>\r\n        </div>\r\n        <div className=\"tpayment\">\r\n          Total Payable : <span>₹{price - discount}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartSummary;\r\n","import React from \"react\";\r\n\r\nimport { calculateDiscountPrice } from \"../../utils/product.util\";\r\n\r\nconst CartItems = props => {\r\n  return (\r\n    <div className=\"col-sm-8 product-list\">\r\n      {props.cart.map(product => (\r\n        <div className=\"pd-section\" key={product.id}>\r\n          <div className=\"fcnt\">\r\n            <img\r\n              className=\"img-responsive\"\r\n              src={product.img_url}\r\n              alt=\"product\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"scnt\">\r\n            <div>{product.name} </div>\r\n            <div className=\"tcnt\">\r\n              <div className=\"cart-sum\">\r\n                <div className=\"itemprice\">\r\n                  <div>\r\n                    <div className=\"itempric\">\r\n                      ₹\r\n                      {calculateDiscountPrice(product.price, product.discount) *\r\n                        product.quantity}\r\n                    </div>\r\n                    <s>{product.price * product.quantity}</s>\r\n                  </div>\r\n                  <div className=\"discnt\">{product.discount}% off</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"cart-sum\">\r\n                <div className=\"productupdate\">\r\n                  <span\r\n                    onClick={() => props.decreaseItemQuantity(product.id)}\r\n                    className={`glyphicon glyphicon-minus-sign ${product.quantity <= 1 ? 'pointer-none' : ''}` }\r\n                  ></span>\r\n                  <input type=\"text\" value={product.quantity} size=\"2\" />\r\n                  <span\r\n                    onClick={() => props.increaseItemQuantity(product.id)}\r\n                    className=\"glyphicon glyphicon-plus-sign\"\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"cart-sum remove\"\r\n                onClick={() => props.removeItemFromCart(product.id)}\r\n              >\r\n                REMOVE\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  increaseItemQuantity,\r\n  decreaseItemQuantity,\r\n  removeItemFromCart\r\n} from \"../store/actions/cart/cart.action\";\r\nimport CartSummary from \"../components/Checkout/CartSummary\";\r\nimport CartItems from \"../components/Checkout/CartItems\";\r\n\r\nimport \"../style/checkout.scss\";\r\n\r\nconst Checkout = props => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {props.cart.length > 0 ? (\r\n        <div className=\"row checkout-cart\">\r\n          <CartItems\r\n            cart={props.cart}\r\n            increaseItemQuantity={props.increaseItemQuantity}\r\n            decreaseItemQuantity={props.decreaseItemQuantity}\r\n            removeItemFromCart={props.removeItemFromCart}\r\n          />\r\n          <CartSummary cart={props.cart} />\r\n        </div>\r\n      ) : (\r\n        <h1 className=\"not-selected\">No Item in cart</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  increaseItemQuantity,\r\n  decreaseItemQuantity,\r\n  removeItemFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./cart.reducer\";\r\nimport searchReducer from \"./search.reducer\";\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  search: searchReducer\r\n});\r\n","import {\r\n  ADDED_TO_CART,\r\n  INCREASE_QUANTITY,\r\n  DECREASE_QUANTITY,\r\n  REMOVE_CART_ITEM\r\n} from \"../actions/cart/cart.actiontype\";\r\n\r\nexport default function(\r\n  state = {\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  let updatedItems = [];\r\n  switch (action.type) {\r\n    case ADDED_TO_CART:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      };\r\n\r\n    case INCREASE_QUANTITY:\r\n      updatedItems = state.items.map(item => {\r\n        if (item.id === action.payload) {\r\n          return { ...item, quantity: item.quantity + 1 };\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        items: updatedItems\r\n      };\r\n\r\n    case DECREASE_QUANTITY:\r\n      updatedItems = state.items.map(item => {\r\n        if (item.id === action.payload) {\r\n          return { ...item, quantity: item.quantity - 1 };\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        items: updatedItems\r\n      };\r\n\r\n    case REMOVE_CART_ITEM:\r\n      updatedItems = state.items.filter(item => {\r\n        if (item.id === action.payload) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      return {\r\n        ...state,\r\n        items: updatedItems\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_SEARCH_TERM } from \"../actions/search/search.actiontype\";\r\n\r\nexport default function(\r\n  state = {\r\n    term: \"\"\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Shared/Header\";\r\nimport Footer from \"./components/Shared/Footer\";\r\nimport ProductListing from \"./pages/ProductListing\";\r\nimport Checkout from \"./pages/Checkout\";\r\nimport store from \"./store\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={ProductListing} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}